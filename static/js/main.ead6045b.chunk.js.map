{"version":3,"sources":["App.js","index.js"],"names":["require","Highcharts","App","state","options","componentDidMount","a","axios","get","res","setState","data","trans_month","i","xAxis","categories","setMonth","key","e","selectMonth","setText","temp","parseFloat","target","value","setData","isNaN","newOptions","series","alert","this","className","InputGroup","FormControl","placeholder","onChange","Append","DropdownButton","as","title","variant","defalut","map","Dropdown","Item","eventKey","onSelect","Button","onClick","ref","highcharts","allowChartUpdate","updateArgs","Component","ReactDOM","render","document","getElementById"],"mappings":"iaAOAA,EAAQ,GAARA,CAAwCC,K,IAyFzBC,E,2MApFbC,MAAQ,CACNC,QAAS,M,EAGXC,kB,sBAAoB,4BAAAC,EAAA,sEACAC,IAAMC,IAAI,sDADV,OACZC,EADY,OAElB,EAAKC,SAAS,CAACN,QAASK,EAAIE,KAAKP,UAFf,2C,EAKpBQ,YAAc,SAACC,GAEb,OADuB,EAAKV,MAAMC,QAAQU,MAAlCC,WACUF,I,EAGpBG,SAAW,SAACC,EAAKC,GACf,EAAKR,SAAS,CAAES,YAAaF,K,EAG/BG,QAAU,SAACF,GACT,EAAKR,SAAS,CAAEW,KAAMC,WAAWJ,EAAEK,OAAOC,U,EAG5CC,QAAU,WAAO,IAAD,EACyB,EAAKtB,MAApCkB,EADM,EACNA,KAAMF,EADA,EACAA,YAAaf,EADb,EACaA,QAC3B,IAAKsB,MAAML,IAAUF,EAAa,CAChC,IAAIQ,EAAavB,EACjBuB,EAAWC,OAAO,GAAGjB,KAAKQ,GAAeE,EACzC,EAAKX,SAAS,CAAEN,QAASuB,SAEzBE,MAAM,gD,wEAKA,IAAD,SAC0BC,KAAK3B,MAA9BC,EADD,EACCA,QAASe,EADV,EACUA,YACjB,OACE,yBAAKY,UAAU,OACb,yBAAKA,UAAU,4CACb,kBAACC,EAAA,EAAD,CAAYD,UAAU,aACpB,kBAACE,EAAA,EAAD,CACEC,YAAY,2BACZC,SAAUL,KAAKV,UAEjB,kBAACY,EAAA,EAAWI,OAAZ,KACE,kBAACC,EAAA,EAAD,CACEC,GAAIN,IACJO,MAAOpB,EAAcW,KAAKlB,YAAYO,GAAe,iCACrDqB,QAAQ,gBACRC,QAAQ,KAENrC,EACAA,EAAQU,MAAMC,WAAW2B,KAAI,SAAClB,EAAOP,GACnC,OACE,kBAAC0B,EAAA,EAASC,KAAV,CACE3B,IAAKA,EACL4B,SAAU5B,EACV6B,SAAU,EAAK9B,UAEdQ,MAIP,OAGN,kBAACQ,EAAA,EAAWI,OAAZ,KACE,kBAACW,EAAA,EAAD,CAAQP,QAAQ,kBAAkBQ,QAASlB,KAAKL,SAAhD,kBAIJ,kBAAC,IAAD,CACEwB,IAAI,WACJC,WAAYjD,IACZG,QAASA,EACT+C,kBAAkB,EAClBC,WAAY,EAAC,GAAM,GAAM,W,GA9EnBC,aCLlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ead6045b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport { Button, InputGroup, FormControl, DropdownButton, Dropdown } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nrequire('highcharts/modules/exporting')(Highcharts)\r\n\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    options: null\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    const res = await axios.get('https://lunar-geography-271613.appspot.com/getData') // GCP後端取得資料\r\n    this.setState({options: res.data.options})\r\n  }\r\n\r\n  trans_month = (i) => {\r\n    const { categories } = this.state.options.xAxis\r\n    return categories[i]\r\n  }\r\n\r\n  setMonth = (key, e) => {\r\n    this.setState({ selectMonth: key })\r\n  }\r\n\r\n  setText = (e) => {\r\n    this.setState({ temp: parseFloat(e.target.value) })\r\n  }\r\n\r\n  setData = () => {\r\n    const { temp, selectMonth, options } = this.state\r\n    if(!(isNaN(temp)) && selectMonth) {\r\n      let newOptions = options\r\n      newOptions.series[0].data[selectMonth] = temp\r\n      this.setState({ options: newOptions })\r\n    } else {\r\n      alert(\"請確定輸入正確!\")\r\n    }\r\n  }\r\n  \r\n\r\n  render() {\r\n    const { options, selectMonth } = this.state\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"App-header d-flex justify-content-center\">\r\n          <InputGroup className=\"mb-3 w-25\">\r\n            <FormControl\r\n              placeholder=\"輸入溫度\"\r\n              onChange={this.setText}\r\n            />\r\n            <InputGroup.Append>\r\n              <DropdownButton\r\n                as={InputGroup}\r\n                title={selectMonth ? this.trans_month(selectMonth) : \"請選擇月份\"}\r\n                variant=\"outline-light\"\r\n                defalut=\"1\"\r\n              >\r\n                { options ? \r\n                  options.xAxis.categories.map((value, key) => {\r\n                    return (\r\n                      <Dropdown.Item \r\n                        key={key}\r\n                        eventKey={key}\r\n                        onSelect={this.setMonth}\r\n                      >\r\n                        {value}\r\n                      </Dropdown.Item>\r\n                    )\r\n                  })\r\n                : null}\r\n              </DropdownButton>\r\n            </InputGroup.Append>\r\n            <InputGroup.Append>\r\n              <Button variant=\"outline-warning\" onClick={this.setData}>修改</Button>\r\n            </InputGroup.Append>\r\n          </InputGroup>\r\n          \r\n          <HighchartsReact\r\n            ref=\"chartRef\"\r\n            highcharts={Highcharts}\r\n            options={options}\r\n            allowChartUpdate={true}\r\n            updateArgs={[true, true, true]}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}